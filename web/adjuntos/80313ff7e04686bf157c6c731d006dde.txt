imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: dynamo_session_handler
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# FOSUser
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Data\DBBundle\Entity\AccUsuarios

# sessiones AWS Amazon DynamoDB
gwk_dynamo_session:
    table: sp_session_table
    locking_strategy: pessimistic
    # dynamo_client_id: my_dynamodb_service # If you already use DynamoDb and you have a AWS\DynamoDb\DynamoDbClient service, you can make the session handler use it
    automatic_gc: true
    gc_batch_size: 25
    session_lifetime: 86400
    read_capacity: 10
    write_capacity: 10
    aws:
        region: %aws_region%
        key: %aws_dynamo_key%
        secret: %aws_dynamo_secret%
 
# AWS Amazon
#cybernox_amazon_web_services:
#    key:                        %aws_key%
#    secret:                     %aws_secret%
#    account_id:                 %aws_account_id%
#    canonical_id:               %aws_canonical_id%
#    canonical_name:             %aws_canonical_name%
#    mfa_serial:                 %aws_mfa_serial%
#    cloudfront_keypair:         %aws_cloudfront_keypair%
#    cloudfront_pem:             %aws_cloudfront_pem%
#    default_cache_config:       apc
#    enable_extensions:          [] 
#    certificate_authority:      false
#    disable_auto_config:        false
seferov_aws:
    key: %aws_key%
    secret: %aws_secret%
    region: %aws_region%
    services:
        s3:
            key: %aws_s3_key%
            secret: %aws_s3_secret%
            region: %aws_s3_region%
        DynamoDb:
            key: %aws_dynamo_key%
            secret: %aws_dynamo_secret%
            region: %aws_region%

services:
    servicioMail:
        class:        SP\BaseBundle\SendMails
        arguments:    [%mailer_transport%,%mailer_host%,%mailer_user%,%mailer_password%,%mailer_encryption%,%mailer_auth%,%mailer_puerto%]
    conectPC:
        class:        SP\BaseBundle\PCOauth
        arguments:    [%pco_consumer_key%,%pco_consumer_secret%,%pco_token_key%,%pco_token_secret%,@doctrine.orm.entity_manager]
    conectMrm:
        class:        SP\BaseBundle\MRMaccess
        arguments:    [%mrm_url%,%mrm_token_secret%,@doctrine.orm.entity_manager]
    pagosOnline:
        class:        SP\BaseBundle\PagosOnline
        arguments:    [%PGOcuentaId%,%PGOusername%,%PGOpassword%,%PGOstrWSSENS%,%PGOwsdl%,%PGOurlConfirm%,@doctrine.orm.entity_manager]
    servicioMiembrosMrm:
        class:        SP\MrmBundle\Servicios\SrvMiembrosMrm
        arguments:    [@doctrine.orm.entity_manager,@conectMrm]
    googleMaps:
        class:        SP\BaseBundle\Servicios\GoogleMaps
    maestros:
        class:        SP\ObjsBundle\Objetos\SPDataMaestros
        arguments:    [@doctrine.orm.entity_manager]
    personas:
        class:        SP\ObjsBundle\Objetos\SPPersonas
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    comunicaciones:
        class:        SP\ObjsBundle\Objetos\SPComunicaciones
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    servidores:
        class:        SP\ObjsBundle\Objetos\SPServidores
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    apiPCenter:
        class:        SP\ObjsBundle\Objetos\SPServidores\ApiPlanningCenter
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    apiMrm:
        class:        SP\ObjsBundle\Objetos\SPServidores\ApiMrm
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    asistencia:
        class:        SP\ObjsBundle\Objetos\SPAsistencia
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    spS3:
        class:        SP\ObjsBundle\Objetos\SPApis\SPAwsS3
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
    spDynamo:
        class:        SP\ObjsBundle\Objetos\SPApis\SPAwsDynamo
        arguments:    [@service_container,@doctrine.orm.entity_manager,@maestros]
